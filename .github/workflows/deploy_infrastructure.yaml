name: Create and/or Update Infrastructure

on:
  workflow_dispatch:

# We don't want parallel deployments.
concurrency: develop

env:
  # Environment variables needed only by the workflow.
  VALIDATOR_VERSION: "0.9.1"

jobs:
  # Job that will dynamically set github actions environment based on the branches.
  extract-environment-name:
    name: Extract environment name
    # Define environment variables for this job.
    env:
      ENV_NAME: ""
      TFVARS_FILE: ""
    runs-on: ubuntu-latest
    steps:
      # Set environment and read secret values.
      - name: Set env vars
        run: |
          if [[ ${GITHUB_REF} == *"master"* ]]
          then
            echo "Picked Production Environment!"
            echo "ENV_NAME=production" >> $GITHUB_ENV
            echo "TFVARS_FILE=_prod.tfvars" >> $GITHUB_ENV
            echo "GCP_PROJECT_ID=null" >> $GITHUB_ENV
            echo "WORKLOAD_IDENTITY_PROVIDER=null" >> $GITHUB_ENV
            echo "SERVICE_ACCOUNT=null" >> $GITHUB_ENV
            echo "TERRAFORM_BUCKET=null" >> $GITHUB_ENV
            echo "TERRAFORM_BUCKET_PREFIX=null" >> $GITHUB_ENV
          elif [[ ${GITHUB_REF} == *"integration"* ]]
          then
            echo "Picked Test Environment!"
            echo "ENV_NAME=test" >> $GITHUB_ENV
            echo "TFVARS_FILE=_test.tfvars" >> $GITHUB_ENV
            echo "GCP_PROJECT_ID=marketing-acc-t-9a80" >> $GITHUB_ENV
            echo "WORKLOAD_IDENTITY_PROVIDER=projects/405156308784/locations/global/workloadIdentityPools/pool-github-actions/providers/wip-infra-cicd" >> $GITHUB_ENV
            echo "SERVICE_ACCOUNT=sa-github-actions@marketing-acc-t-9a80.iam.gserviceaccount.com" >> $GITHUB_ENV
            echo "TERRAFORM_BUCKET=bucket-marketing-acc-terraform-t" >> $GITHUB_ENV
            echo "TERRAFORM_BUCKET_PREFIX=terraform_state/" >> $GITHUB_ENV
          else
            echo "Picked Dev Environment!"
            echo "ENV_NAME=development" >> $GITHUB_ENV
            echo "TFVARS_FILE=_dev.tfvars" >> $GITHUB_ENV
            echo "GCP_PROJECT_ID=marketing-acc-d-9239" >> $GITHUB_ENV
            echo "WORKLOAD_IDENTITY_PROVIDER=projects/172372942123/locations/global/workloadIdentityPools/pool-github-actions/providers/wip-infra-cicd" >> $GITHUB_ENV
            echo "SERVICE_ACCOUNT=sa-github-actions@marketing-acc-d-9239.iam.gserviceaccount.com" >> $GITHUB_ENV
            echo "TERRAFORM_BUCKET=bucket-marketing-acc-terraform-d" >> $GITHUB_ENV
            echo "TERRAFORM_BUCKET_PREFIX=terraform_state/" >> $GITHUB_ENV
          fi
    # Set outputs from environment variables set in steps.
    outputs:
      environment: ${{ env.ENV_NAME }}
      tfvars: ${{ env.TFVARS_FILE }}
      project_id: ${{ env.GCP_PROJECT_ID }}
      wip: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
      service_account: ${{ env.SERVICE_ACCOUNT }}
      tf_bucket: ${{ env.TERRAFORM_BUCKET }}
      tf_prefix: ${{ env.TERRAFORM_BUCKET_PREFIX }}

  deploy:
    permissions:
      contents: read
      id-token: write

    name: Deployment
    needs:
      - extract-environment-name
    # Read environment from previous job.
    environment: ${{ needs.extract-environment-name.outputs.environment }}
    runs-on: ubuntu-latest

    steps:
      - name: Pull code into container üìã
        uses: actions/checkout@v2

      #- name: Pull code into container üìã
      #  uses: actions/checkout@v2
      #  with:
      #      repository: git@github.com:hm-group/sodp-cloud-run-solace-to-pubsub.git//infra/?ref=feature/BTARCD-1111

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: ${{ needs.extract-environment-name.outputs.wip }}
          service_account: ${{ needs.extract-environment-name.outputs.service_account }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ needs.extract-environment-name.outputs.project_id }}

      # Configuring the backend file using Github secrets depending upon the environment
      - name: Prepare environment üîë
        working-directory: ./infra
        shell: sh
        run: |
          cat <<EOF > backend.cfg
          bucket = "${{ needs.extract-environment-name.outputs.tf_bucket}}"
          prefix = "${{ needs.extract-environment-name.outputs.tf_prefix }}"
          EOF
      - name: Initialize terraform üé¨
        working-directory: ./infra
        shell: sh
        run: |
          terraform init --backend-config=backend.cfg
        env:
          GIT_SSH_COMMAND: "echo '${{ secrets.GH_SSH_PRIVATE_KEY }}' > id_rsa
            && ssh-keyscan github.com > known_hosts
            && chmod 600 id_rsa known_hosts
            && ssh -i ./id_rsa -o UserKnownHostsFile=./known_hosts"

      - name: Validate terraform files üîç
        working-directory: ./infra
        shell: sh
        run: |
          terraform validate
      - name: Plan terraform changes üìù
        working-directory: ./infra
        shell: sh
        run: |
          terraform plan -var-file=${{ needs.extract-environment-name.outputs.tfvars }} -out=plan.tfplan
      - name: Apply terraform changes üå≥
        working-directory: ./infra
        shell: sh
        run: |
          terraform apply plan.tfplan
      #- name: Build image for Cloud Run
      #  run: |
      #    gcloud builds submit --region=europe-west1 --tag europe-west1-docker.pkg.dev/test/cloud-run-templates/solace-to-pubsub:latest "git@github.com:hm-group/sodp-cloud-run-solace-to-pubsub.git//infra/?ref=feature/BTARCD-1111" --gcs-log-dir gs://${{ needs.extract-environment-name.outputs.tf_bucket }}/TemporarayFiles